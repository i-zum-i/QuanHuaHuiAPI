# Rihua API Nginx Configuration

upstream rihua_api {
    server rihua-api:8080;
    keepalive 32;
}

# HTTP to HTTPS redirect (for production)
server {
    listen 80;
    server_name localhost rihua.local;
    
    # Health check endpoint (allow HTTP)
    location /actuator/health {
        proxy_pass http://rihua_api;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    # Redirect all other traffic to HTTPS in production
    # location / {
    #     return 301 https://$server_name$request_uri;
    # }
    
    # For development, proxy all requests
    location / {
        proxy_pass http://rihua_api;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
        
        # CORS headers for development
        add_header Access-Control-Allow-Origin "*" always;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, PATCH, DELETE, OPTIONS" always;
        add_header Access-Control-Allow-Headers "Authorization, Content-Type, Accept, Accept-Language" always;
        
        if ($request_method = 'OPTIONS') {
            add_header Access-Control-Allow-Origin "*";
            add_header Access-Control-Allow-Methods "GET, POST, PUT, PATCH, DELETE, OPTIONS";
            add_header Access-Control-Allow-Headers "Authorization, Content-Type, Accept, Accept-Language";
            add_header Access-Control-Max-Age 86400;
            add_header Content-Length 0;
            add_header Content-Type text/plain;
            return 204;
        }
    }
}

# HTTPS server (for production)
# server {
#     listen 443 ssl http2;
#     server_name rihua.com www.rihua.com;
#     
#     # SSL configuration
#     ssl_certificate /etc/nginx/ssl/rihua.crt;
#     ssl_certificate_key /etc/nginx/ssl/rihua.key;
#     ssl_protocols TLSv1.2 TLSv1.3;
#     ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384;
#     ssl_prefer_server_ciphers off;
#     ssl_session_cache shared:SSL:10m;
#     ssl_session_timeout 10m;
#     
#     # Security headers
#     add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
#     
#     # API endpoints
#     location /api/ {
#         limit_req zone=api burst=20 nodelay;
#         
#         proxy_pass http://rihua_api;
#         proxy_set_header Host $host;
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header X-Forwarded-Proto $scheme;
#         proxy_connect_timeout 30s;
#         proxy_send_timeout 30s;
#         proxy_read_timeout 30s;
#     }
#     
#     # Authentication endpoints (stricter rate limiting)
#     location /api/v1/auth/ {
#         limit_req zone=auth burst=10 nodelay;
#         
#         proxy_pass http://rihua_api;
#         proxy_set_header Host $host;
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header X-Forwarded-Proto $scheme;
#     }
#     
#     # Health check
#     location /actuator/health {
#         proxy_pass http://rihua_api;
#         proxy_set_header Host $host;
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header X-Forwarded-Proto $scheme;
#     }
# }