version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: rihua-postgres
    environment:
      POSTGRES_DB: rihua_dev
      POSTGRES_USER: rihua_user
      POSTGRES_PASSWORD: rihua_password
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --locale=C"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgres/init:/docker-entrypoint-initdb.d
    networks:
      - rihua-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U rihua_user -d rihua_dev"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: rihua-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
      - ./docker/redis/redis.conf:/usr/local/etc/redis/redis.conf
    command: redis-server /usr/local/etc/redis/redis.conf
    networks:
      - rihua-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # MinIO (S3 Compatible Storage for Development)
  minio:
    image: minio/minio:latest
    container_name: rihua-minio
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin123
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    networks:
      - rihua-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  # MailHog (Email Testing)
  mailhog:
    image: mailhog/mailhog:latest
    container_name: rihua-mailhog
    ports:
      - "1025:1025"  # SMTP port
      - "8025:8025"  # Web UI port
    networks:
      - rihua-network

  # Rihua API Application
  rihua-api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: rihua-api
    environment:
      SPRING_PROFILES_ACTIVE: dev
      DATABASE_URL: jdbc:postgresql://postgres:5432/rihua_dev
      DATABASE_USERNAME: rihua_user
      DATABASE_PASSWORD: rihua_password
      REDIS_HOST: redis
      REDIS_PORT: 6379
      JWT_SECRET: dev-jwt-secret-key-for-development-only
      CORS_ALLOWED_ORIGINS: http://localhost:3000,http://localhost:3001,http://localhost:19006
      AWS_S3_BUCKET: rihua-dev-bucket
      AWS_REGION: ap-northeast-1
      AWS_ACCESS_KEY: dev-access-key
      AWS_SECRET_KEY: dev-secret-key
      MAIL_HOST: mailhog
      MAIL_PORT: 1025
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - rihua-network
    volumes:
      - ./logs:/var/log/rihua-api
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  # Nginx (Reverse Proxy)
  nginx:
    image: nginx:alpine
    container_name: rihua-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./docker/nginx/conf.d:/etc/nginx/conf.d
      - ./docker/nginx/ssl:/etc/nginx/ssl
    depends_on:
      - rihua-api
    networks:
      - rihua-network

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  minio_data:
    driver: local

networks:
  rihua-network:
    driver: bridge